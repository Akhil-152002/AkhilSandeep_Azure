---
- name: Azure AD Automation using Ansible
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    graph_api_url: "https://graph.microsoft.com/v1.0"
    enable_account: true  # Set to false to disable the account
    exmp: "AS@amitomar63gmail.onmicrosoft.com"

  tasks:
    - name: Get Access Token
      uri:
        url: "https://login.microsoftonline.com/{{ tenant_id }}/oauth2/v2.0/token"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body:
          client_id: "{{ client_id }}"
          client_secret: "{{ client_secret }}"
          scope: "https://graph.microsoft.com/.default"
          grant_type: "client_credentials"
        body_format: form-urlencoded
        return_content: yes
      register: token_response
      failed_when: token_response.status != 200

    - name: Set access token fact
      set_fact:
        access_token: "{{ token_response.json.access_token }}"
      when: token_response.status == 200

    - name: Debug - Show Access Token Status
      debug:
        msg: "Access Token Retrieval: {{ 'Successful' if token_response.status == 200 else 'Unsuccessful' }}"

    - name: Check for User
      uri:
        url: "{{ graph_api_url }}/users/Jayanta.Banerjee@amitomar63gmail.onmicrosoft.com"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
      register: user_check
      failed_when: user_check.status not in [200, 404]

    - name: Create User if Not Exists
      uri:
        url: "{{ graph_api_url }}/users"
        method: POST
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: true
          displayName: "Akhilsandeep3"
          mailNickname: "AS3"
          userPrincipalName: "AS3@amitomar63gmail.onmicrosoft.com"
          passwordProfile:
            forceChangePasswordNextSignIn: true
            password: "TempPass@123"
        body_format: json
      register: user_creation
      when: user_check.status == 404
      failed_when: user_creation.status not in [200, 201]

    - name: Debug - Show User Creation Status
      debug:
        msg: "User Creation: {{ 'Successful' if user_creation.status in [200, 201] else 'Unsuccessful' }}"
      when: user_check.status == 404

    - name: Verify target user exists
      uri:
        url: "{{ graph_api_url }}/users/{{exmp}}"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
      register: user_verify
      failed_when: false
      
    - name: Debug - Show user verify result
      debug:
        var: user_verify

    - name: Get user ID
      uri:
        url: "{{ graph_api_url }}/users?$filter=userPrincipalName eq '{{exmp}}'"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
      register: user_lookup
      failed_when: false

    - name: Enable or Disable User Account
      uri:
        url: "{{ graph_api_url }}/users/{{exmp}}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        body:
          accountEnabled: "{{ enable_account }}"
        body_format: json
      register: account_update
      failed_when: false  # Don't fail so we can see the actual response
    
    - name: Debug - Show account update response
      debug:
        var: account_update
